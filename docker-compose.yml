version: '3'

x-common-deploy: &common-deploy
  replicas: 1
  update_config:
    parallelism: 1
    delay: 30s
    failure_action: rollback
    monitor: 30s
    order: start-first
  rollback_config:
    parallelism: 1
    delay: 30s
    monitor: 60s

services:
  www:
    image: ghcr.io/theryangeary/www:latest
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      services:

  gl:
    image: ghcr.io/theryangeary/gl:v11
    build:
      context: .
      dockerfile: gl/Dockerfile
    deploy: *common-deploy
    restart: unless-stopped
    environment:
      - DATABASE_URL=sqlite:/data/grocery.db
      - PORT=3001
    volumes:
      - gl_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      services:

  pathfinder:
    image: ghcr.io/theryangeary/pathfinder:v4
    env_file:
      - ./pathfinder/.env
    command: ["./cron_entrypoint.sh"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - pathfinder_data:/data
    networks:
      services:

  nginx:
    image: ghcr.io/theryangeary/nginx:v10
    build:
      context: .
      dockerfile: nginx/Dockerfile
    deploy: *common-deploy
    restart: unless-stopped
    networks:
      cloudflared:
      services:

  cloudflared:
    image: cloudflare/cloudflared:1755-08efe4c10307
    command: tunnel --no-autoupdate run
    env_file:
      - .env
    restart: unless-stopped
    networks:
      cloudflared:

  volume_backup:
    image: ghcr.io/theryangeary/volume_backup:v3
    build:
      context: .
      dockerfile: volume_backup/Dockerfile
    restart: 'no'
    env_file:
      - .env
    environment:
      - FTP_PASSWORD_FILE=/run/secrets/homelab_ftp_password
    secrets:
      - homelab_ftp_password
    volumes:
      - gl_data:/data/gl
      - pathfinder_data:/data/pathfinder
      - deno_cache:/data/deno_cache
      - certmagic_cache:/data/certmagic_cache

  authelia:
    # container_name: 'authelia'
    image: 'docker.io/authelia/authelia:latest'
    restart: 'unless-stopped'
    networks:
      services:
    ports:
      - 9091:9091
    environment:
      AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET_FILE: '/secrets/AUTHELIA_JWT_SECRET'
      AUTHELIA_SESSION_SECRET_FILE: '/secrets/AUTHELIA_SESSION_SECRET'
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: '/secrets/AUTHELIA_STORAGE_ENCRYPTION_KEY'
    volumes:
      - '${PWD}/authelia/config:/config'
      - '${PWD}/authelia/secrets:/secrets'

  caddy:
    image: caddy:2.10
    restart: 'unless-stopped'
    networks:
      services:
      cloudflared:
    deploy: *common-deploy
    ports:
      - 80:80
      - 443:443
    volumes:
      - '${PWD}/caddy/conf:/etc/caddy'
      - caddy_data:/data

networks:
  services:
  cloudflared:
    name: cloudflared

volumes:
  deno_cache:
  certmagic_cache:
  gl_data:
  pathfinder_data:
  caddy_data:

secrets:
  homelab_ftp_password:
    external: true
